--- perl.c.orig	2008-04-21 20:25:34.000000000 -0700
+++ perl.c	2008-04-21 20:38:35.000000000 -0700
@@ -388,11 +388,11 @@
 	("__environ", (unsigned long *) &environ_pointer, NULL);
 #endif /* environ */
 
-#ifndef PERL_MICRO
+//#ifndef PERL_MICRO
 #   ifdef  USE_ENVIRON_ARRAY
     PL_origenviron = environ;
 #   endif
-#endif
+// #endif /* PERL_MICRO */
 
     /* Use sysconf(_SC_CLK_TCK) if available, if not
      * available or if the sysconf() fails, use the HZ.
@@ -879,7 +879,7 @@
     /* if PERL_USE_SAFE_PUTENV is defined environ will not have been copied
      * so we certainly shouldn't free it here
      */
-#ifndef PERL_MICRO
+//#ifndef PERL_MICRO
 #if defined(USE_ENVIRON_ARRAY) && !defined(PERL_USE_SAFE_PUTENV)
     if (environ != PL_origenviron && !PL_use_safe_putenv
 #ifdef USE_ITHREADS
@@ -899,7 +899,7 @@
 	environ = PL_origenviron;
     }
 #endif
-#endif /* !PERL_MICRO */
+// #endif /* !PERL_MICRO  */
 
     /* reset so print() ends up where we expect */
     setdefout(Nullgv);
@@ -4673,7 +4673,7 @@
 	GvMULTI_on(PL_envgv);
 	hv = GvHVn(PL_envgv);
 	hv_magic(hv, Nullgv, PERL_MAGIC_env);
-#ifndef PERL_MICRO
+//#ifndef PERL_MICRO
 #ifdef USE_ENVIRON_ARRAY
 	/* Note that if the supplied env parameter is actually a copy
 	   of the global environ then it may now point to free'd memory
@@ -4714,7 +4714,7 @@
 	  }
       }
 #endif /* USE_ENVIRON_ARRAY */
-#endif /* !PERL_MICRO */
+//#endif /* !PERL_MICRO */
     }
     TAINT_NOT;
     if ((tmpgv = gv_fetchpv("$",TRUE, SVt_PV))) {
